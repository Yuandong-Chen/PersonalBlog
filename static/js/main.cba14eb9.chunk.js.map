{"version":3,"sources":["data/LeetCode_logo.png","data/resume2.pdf","../node_modules/braft-extensions/dist/assets sync /^/.//.*$","components/Loading.js","components/Search.js","data/articles.js","components/searchEngine/Rating.js","components/Blogs.js","components/Projects.js","components/Editor.js","components/Edit.js","components/AboutMe.js","components/Tabs.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./1.png","./10.png","./11.png","./12.png","./13.png","./14.png","./15.png","./16.png","./17.png","./18.png","./19.png","./2.png","./20.png","./21.png","./22.png","./23.png","./24.png","./25.png","./3.png","./4.png","./5.png","./6.png","./7.png","./8.png","./9.png","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","LoadingContainer","styled","div","_templateObject","Spinner","_templateObject2","withComponent","TrinityRingsSpinner","Header","h1","_templateObject3","Loading","react_default","a","createElement","color","Wrapper","Search_templateObject","Toggle","button","Search_templateObject2","Input","input","Search_templateObject3","Search","_ref","onChange","onClick","AlignJustify","size","type","placeholder","articles","title","date","tags","extract","data","_rating","_vector","rating","find","Set","split","i","_loop","b","toConsumableArray","filter","x","has","length","sort","Title","Blogs_templateObject","Extract","Blogs_templateObject2","DateArticle","Blogs_templateObject3","Data","_templateObject4","CardFrame","_templateObject5","props","toggled","css","_templateObject6","_templateObject7","BlogCard","rest","objectWithoutProperties","assign","es","inverseFlipId","ExpandedBlog","_ref2","flipId","Blogs","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setToggle","setState","_ref3","setFullScreen","s","preventDefault","stopPropagation","target","_ref4","isFullScreen","onCancel","_ref5","setSearching","searching","value","state","slice","inFullScreen","children","className","dangerouslySetInnerHTML","__html","_this2","flipKey","spring","obj","Blogs_ExpandedBlog","key","RawHTML","components_Search","Blogs_Wrapper","stagger","Blogs_BlogCard","React","Component","Projects_templateObject","Project","Projects_templateObject2","ProjectCard","Projects_templateObject3","ProjectName","Projects_templateObject4","Note","Projects_templateObject5","ProjectDescription","Projects_templateObject6","IconsWrapper","Projects_templateObject7","ProjectMyJob","_templateObject8","ProjectTechs","ul","_templateObject9","TechPoint","li","_templateObject10","Demo","_templateObject11","Caption","_templateObject12","h3","_templateObject13","Delim","_templateObject14","Projects","Projects_Wrapper","Projects_Title","href","PhoneIphone","ReactLogo","Html5","Github","GoogleDrive","options","defaultColumns","defaultRows","syntaxs","name","syntax","emoticons","defaultEmoticons","item","require","concat","closeOnBlur","closeOnSelect","includeEditors","BraftEditor","use","Table","Markdown","CodeHighlighter","Emoticon","Editor","editorState","submitContent","_callee","rawContent","htmlContent","regenerator_default","wrap","_context","prev","next","toHTML","onSave","sent","stop","handleEditorChange","createEditorState","editorId","dist_default","Edit_templateObject","Edit","saveChange","r","html","raw","Edit_Wrapper","Editor_Editor","LeetCode","img","AboutMe_templateObject","MTechPoint","AboutMe_templateObject2","AboutMe","resume","src","leetcode","Email","StackOverflow","Menu","Tabs_templateObject","Link","MenuContainer","Tabs_templateObject2","Panel","Tabs_templateObject3","Tabs","tabs","BrowserRouter","to","Switch","Route","path","component","tabConfigs","fadeIn","keyframes","Home_templateObject","AnimeWrapper","Home_templateObject2","Home","tabsConfigs","components_Tabs","App","isLoading","setTimeout","components_Loading","components_Home","Boolean","window","location","hostname","match","Gitment","pathname","owner","repo","oauth","client_id","client_secret","render","ReactDOM","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cba14eb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LeetCode_logo.ca674b51.png\";","module.exports = __webpack_public_path__ + \"static/media/resume2.12b27293.pdf\";","var map = {\n\t\"./1.png\": 264,\n\t\"./10.png\": 265,\n\t\"./11.png\": 266,\n\t\"./12.png\": 267,\n\t\"./13.png\": 268,\n\t\"./14.png\": 269,\n\t\"./15.png\": 270,\n\t\"./16.png\": 271,\n\t\"./17.png\": 272,\n\t\"./18.png\": 273,\n\t\"./19.png\": 274,\n\t\"./2.png\": 275,\n\t\"./20.png\": 276,\n\t\"./21.png\": 277,\n\t\"./22.png\": 278,\n\t\"./23.png\": 279,\n\t\"./24.png\": 280,\n\t\"./25.png\": 281,\n\t\"./3.png\": 282,\n\t\"./4.png\": 283,\n\t\"./5.png\": 284,\n\t\"./6.png\": 285,\n\t\"./7.png\": 286,\n\t\"./8.png\": 287,\n\t\"./9.png\": 288\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 263;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TrinityRingsSpinner } from 'react-epic-spinners'\nimport styled from 'styled-components';\n\nconst LoadingContainer = styled.div`\n  width: 100%;\n  height: 200px;\n`;\n\nconst Spinner = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding-bottom: 100px;\n`.withComponent(TrinityRingsSpinner)\n\nconst Header = styled.h1`\n  margin-top: 25%;\n  font-family: 'Monoton', cursive;\n  text-align: center;\n  color: black;\n`;\n\nconst Loading = () => {\n  return(\n    <div>\n      <Header>Simple but not Simpler</Header>\n      <LoadingContainer>\n        <Spinner color=\"black\" />\n      </LoadingContainer>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport {AlignJustify as Card} from 'styled-icons/boxicons-regular/AlignJustify';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  margin-left: 10%;\n  margin-right: 10%;\n  margin-bottom: 15px;\n  margin-top: 15px;\n`;\n\nconst Toggle = styled.button`\n  flex: 1 0\n  text-align: right;\n  background: none;\n  max-width: 60px;\n  border: none;\n`;\n\nconst Input = styled.input`\n  flex: 1 0\n  height: 24px;\n  padding: 0.5em;\n  margin: 0.5em;\n  margin-right: 20px;\n  color: black\n  background: white;\n  border: solid 0.5px black;\n  border-radius: 3px;\n  max-width: 100px;\n`;\n\nconst Search = ({onChange, onClick}) => {\n  return <Wrapper>\n          <Toggle onClick={onClick}><Card size=\"45px\"/></Toggle><Input type=\"text\" placeholder=\"Search\" onChange={onChange} />\n        </Wrapper>\n};\n\nexport default Search;\n","let articles = [\n  {\n    title: \"LeetCode 556 Next Greater Element III\",\n    date: \"2019-01-01\",\n    tags: \"LeetCode 556 Next Greater Element III 2019 01 01\",\n    extract: \"Use Stack data Structure Easy achieve O(N)\",\n    data: '<p><span style=\"color:#000000\"><span style=\"font-size:13px\"><span style=\"background-color:#ffffff\">Given a positive</span></span></span><strong>32-bit</strong><span style=\"color:#000000\"><span style=\"font-size:13px\"><span style=\"background-color:#ffffff\">integer</span></span></span><strong>n</strong><span style=\"color:#000000\"><span style=\"font-size:13px\"><span style=\"background-color:#ffffff\">, you need to find the smallest</span></span></span><strong>32-bit</strong><span style=\"color:#000000\"><span style=\"font-size:13px\"><span style=\"background-color:#ffffff\">integer which has exactly the same digits existing in the integer</span></span></span><strong>n</strong><span style=\"color:#000000\"><span style=\"font-size:13px\"><span style=\"background-color:#ffffff\">and is greater in value than n. If no such positive</span></span></span><strong>32-bit</strong><span style=\"color:#000000\"><span style=\"font-size:13px\"><span style=\"background-color:#ffffff\">integer exists, you need to return -1.</span></span></span></p><p><strong>Example 1:</strong></p><pre><code><strong>Input:</strong> 12<br/><strong>Output:</strong> 21<br/></code></pre><p style=\"text-align:start;text-indent:2em;\"> </p><p><strong>Example 2:</strong></p><pre><code><strong>Input:</strong> 21<br/><strong>Output:</strong> -1</code></pre><p></p><pre><code>object Solution {<br/> def nextGreaterElement(n: Int): Int = {<br/> val arr: Array[Char] = n.toString.toCharArray<br/> val len = arr.length<br/> <span style=\"color:#aa0d91\">if</span>(len == <span style=\"color:#1c00cf\">0</span>) <span style=\"color:#aa0d91\">return</span> -<span style=\"color:#1c00cf\">1</span><br/> import collection.mutable.Stack<br/> val <span style=\"color:#aa0d91\">q</span>: Array[Int] = Array.fill(len)(-<span style=\"color:#1c00cf\">1</span>)<br/> val stk: Stack[(Int, Int)] = Stack()<br/> stk.push((arr(len - <span style=\"color:#1c00cf\">1</span>), len - <span style=\"color:#1c00cf\">1</span>))<br/> var i = len - <span style=\"color:#1c00cf\">2</span><br/> <span style=\"color:#aa0d91\">while</span>(i &gt;= <span style=\"color:#1c00cf\">0</span>) {<br/> <span style=\"color:#aa0d91\">while</span>(stk.nonEmpty &amp;&amp; stk.top._1 &gt; arr(i)) {<br/> val (<span style=\"color:#1c00cf\">_</span>, ind) = stk.pop()<br/> <span style=\"color:#aa0d91\">if</span>(<span style=\"color:#c41a16\">q(ind)</span> == -<span style=\"color:#1c00cf\">1</span>) {<br/> <span style=\"color:#c41a16\">q(ind)</span> = i<br/> }<br/> }<br/> stk.push((arr(i), i))<br/> i -= <span style=\"color:#1c00cf\">1</span><br/> }<br/> //println(q.toList)<br/> val <span style=\"color:#aa0d91\">m</span> = q.max<br/> <span style=\"color:#aa0d91\">if</span>(<span style=\"color:#aa0d91\">m</span> == -<span style=\"color:#1c00cf\">1</span>) <span style=\"color:#aa0d91\">return</span> -<span style=\"color:#1c00cf\">1</span><br/> var find = q.length - <span style=\"color:#1c00cf\">1</span><br/> var <span style=\"color:#aa0d91\">continue</span> = true<br/> <span style=\"color:#aa0d91\">while</span> (find &gt;= <span style=\"color:#1c00cf\">0</span> &amp;&amp; <span style=\"color:#aa0d91\">continue</span>) {<br/> <span style=\"color:#aa0d91\">if</span>(<span style=\"color:#c41a16\">q(find)</span> == <span style=\"color:#aa0d91\">m</span>) {<br/> <span style=\"color:#aa0d91\">continue</span> = false<br/> }<br/> find -= <span style=\"color:#1c00cf\">1</span><br/> }<br/> find += <span style=\"color:#1c00cf\">1</span><br/> <span style=\"color:#aa0d91\">if</span>(find == -<span style=\"color:#1c00cf\">1</span>) <span style=\"color:#aa0d91\">return</span> -<span style=\"color:#1c00cf\">1</span><br/> val t = arr(find)<br/> arr(find) = arr(<span style=\"color:#c41a16\">q(find)</span>)<br/> arr(<span style=\"color:#c41a16\">q(find)</span>) = t<br/> try {<br/> (arr.take(<span style=\"color:#c41a16\">q(find)</span> + <span style=\"color:#1c00cf\">1</span>) ++ arr.drop(<span style=\"color:#c41a16\">q(find)</span> + <span style=\"color:#1c00cf\">1</span>).sorted).foldLeft(<span style=\"color:#c41a16\">&quot;&quot;</span>)(<span style=\"color:#1c00cf\">_</span> + <span style=\"color:#1c00cf\">_</span>).toInt<br/> }<br/> catch {<br/> case <span style=\"color:#1c00cf\">_</span>: <span style=\"color:#c41a16\">Throwable =&gt;</span> -<span style=\"color:#1c00cf\">1</span><br/> }<br/> }<br/>}</code></pre>',\n    _rating: 0,\n    _vector: null\n  },\n  {\n    title: \"LeetCode 503 Next Greater Element II\",\n    date: \"2019-01-02\",\n    tags: \"LeetCode 503 Next Greater Element II 2019 01 02\",\n    extract: \"Solve cyclic array using Stack\",\n    data: '<p style=\"text-align:start;text-indent:2em;\">Given a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn&#x27;t exist, output -1 for this number.</p><p></p><p style=\"text-align:start;text-indent:2em;\"><strong>Example 1:</strong><br/></p><pre><code><strong>Input:</strong> [1,2,1]<br/><strong>Output:</strong> [2,-1,2]<br/><strong>Explanation:</strong> The first 1&#x27;s next greater number is 2; <br/>The number 2 can&#x27;t find next greater number; <br/>The second 1&#x27;s next greater number needs to search circularly, which is also 2.<br/></code></pre><p style=\"text-align:start;text-indent:2em;\"><strong>Note:</strong> The length of given array won&#x27;t exceed 10000.</p><p></p><pre><code>object Solution {<br/> def nextGreaterElements(nums: <span style=\"color:#5c2699\">Array</span>[<span style=\"color:#5c2699\">Int</span>]): <span style=\"color:#5c2699\">Array</span>[<span style=\"color:#5c2699\">Int</span>] = {<br/> import collection.mutable.Stack<br/> val stk: Stack[(<span style=\"color:#5c2699\">Int</span>, <span style=\"color:#5c2699\">Int</span>)] = Stack()<br/> val <span style=\"color:#5c2699\">len</span> = nums.length<br/> <span style=\"color:#aa0d91\">if</span>(<span style=\"color:#5c2699\">len</span> == <span style=\"color:#1c00cf\">0</span>) return <span style=\"color:#5c2699\">Array</span>()<br/> val q: <span style=\"color:#5c2699\">Array</span>[<span style=\"color:#5c2699\">Int</span>] = <span style=\"color:#5c2699\">Array</span>.fill(<span style=\"color:#5c2699\">len</span>)(<span style=\"color:#1c00cf\">-1</span>)<br/> var i = <span style=\"color:#1c00cf\">1</span><br/> stk.push((nums(<span style=\"color:#1c00cf\">0</span>), <span style=\"color:#1c00cf\">0</span>))<br/> <span style=\"color:#aa0d91\">while</span>(i &lt; <span style=\"color:#1c00cf\">2</span> * <span style=\"color:#5c2699\">len</span>) {<br/> <span style=\"color:#aa0d91\">while</span> (stk.nonEmpty &amp;&amp; stk.top._1 &lt; nums(i % <span style=\"color:#5c2699\">len</span>)) {<br/> val (_, ind) = stk.pop()<br/> <span style=\"color:#aa0d91\">if</span>(q(ind) == <span style=\"color:#1c00cf\">-1</span>) {<br/> q(ind) = nums(i % <span style=\"color:#5c2699\">len</span>)<br/> }<br/> }<br/> stk.push((nums(i % <span style=\"color:#5c2699\">len</span>), i % <span style=\"color:#5c2699\">len</span>))<br/> i += <span style=\"color:#1c00cf\">1</span><br/> }<br/> q<br/> }<br/>}</code></pre>',\n    _rating: 0,\n    _vector: null\n  },\n  {\n    title: \"LeetCode 496 Next Greater Element I\",\n    date: \"2019-01-03\",\n    tags: \"LeetCode 496 Next Greater Element I 2019 01 03\",\n    extract: \"Solve dinstinct condition next greater problem\",\n    data: '<p style=\"text-align:start;text-indent:2em;\">You are given two arrays <strong>(without duplicates)</strong> <code>nums1</code> and <code>nums2</code> where <code>nums1</code>’s elements are subset of <code>nums2</code>. Find all the next greater numbers for <code>nums1</code>&#x27;s elements in the corresponding places of <code>nums2</code>. </p><p style=\"text-align:start;text-indent:2em;\">The Next Greater Number of a number <strong>x</strong> in <code>nums1</code> is the first greater number to its right in <code>nums2</code>. If it does not exist, output -1 for this number.</p><p style=\"text-align:start;text-indent:2em;\"><strong>Example 1:</strong><br/></p><pre><code><strong>Input:</strong> <strong>nums1</strong> = [4,1,2], <strong>nums2</strong> = [1,3,4,2].<br/><strong>Output:</strong> [-1,3,-1]<br/><strong>Explanation:</strong><br/> For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.<br/> For number 1 in the first array, the next greater number for it in the second array is 3.<br/> For number 2 in the first array, there is no next greater number for it in the second array, so output -1.<br/></code></pre><p style=\"text-align:start;text-indent:2em;\"></p><p style=\"text-align:start;text-indent:2em;\"><strong>Example 2:</strong><br/></p><pre><code><strong>Input:</strong> <strong>nums1</strong> = [2,4], <strong>nums2</strong> = [1,2,3,4].<br/><strong>Output:</strong> [3,-1]<br/><strong>Explanation:</strong><br/> For number 2 in the first array, the next greater number for it in the second array is 3.<br/> For number 4 in the first array, there is no next greater number for it in the second array, so output -1.<br/></code></pre><p style=\"text-align:start;text-indent:2em;\"></p><p style=\"text-align:start;text-indent:2em;\"><strong>Note:</strong><br/></p><ol><li>All elements in <code>nums1</code> and <code>nums2</code> are unique.</li><li>The length of both <code>nums1</code> and <code>nums2</code> would not exceed 1000.</li></ol><pre><code><span style=\"color:#aa0d91\">object</span> Solution {<br/> def nextGreaterElement(nums1: Array[<span style=\"color:#5c2699\">Int</span>], nums2: Array[<span style=\"color:#5c2699\">Int</span>]): Array[<span style=\"color:#5c2699\">Int</span>] = {<br/> <span style=\"color:#aa0d91\">import</span> collection.mutable.{Map, Stack}<br/> <span style=\"color:#aa0d91\">val</span> q: Map[<span style=\"color:#5c2699\">Int</span>, <span style=\"color:#5c2699\">Int</span>] = Map().withDefaultValue(-<span style=\"color:#1c00cf\">1</span>)<br/> <span style=\"color:#aa0d91\">val</span> stk: Stack[<span style=\"color:#5c2699\">Int</span>] = Stack()<br/> <span style=\"color:#aa0d91\">val</span> len = nums2.length<br/> <span style=\"color:#aa0d91\">if</span>(len == <span style=\"color:#1c00cf\">0</span>) <span style=\"color:#aa0d91\">return</span> Array()<br/> stk.push(nums2(<span style=\"color:#1c00cf\">0</span>))<br/> <span style=\"color:#aa0d91\">var</span> i = <span style=\"color:#1c00cf\">1</span><br/> <span style=\"color:#aa0d91\">while</span>(i &lt; len) {<br/> <span style=\"color:#aa0d91\">while</span>(stk.nonEmpty &amp;&amp; stk.top &lt; nums2(i)) {<br/> <span style=\"color:#aa0d91\">val</span> j = stk.pop()<br/> q(j) = nums2(i)<br/> }<br/> stk.push(nums2(i))<br/> i += <span style=\"color:#1c00cf\">1</span><br/> }<br/> <br/> <span style=\"color:#aa0d91\">for</span> {<br/> i &lt;- nums1<br/> } yield q(i)<br/> }<br/>}</code></pre>',\n    _rating: 0,\n    _vector: null\n  },\n  {\n    title: \"LeetCode 743 Network Delay Time\",\n    date: \"2019-01-04\",\n    tags: \"LeetCode 743 Network Delay Time 2019 01 04\",\n    extract: \"Dijkstra Algorithm\",\n    data: '<p style=\"text-align:start;text-indent:2em;\">There are <code>N</code> network nodes, labelled <code>1</code> to <code>N</code>.</p><p style=\"text-align:start;text-indent:2em;\">Given <code>times</code>, a list of travel times as <strong>directed</strong> edges <code>times[i] = (u, v, w)</code>, where <code>u</code> is the source node, <code>v</code> is the target node, and <code>w</code> is the time it takes for a signal to travel from source to target.</p><p style=\"text-align:start;text-indent:2em;\">Now, we send a signal from a certain node <code>K</code>. How long will it take for all nodes to receive the signal? If it is impossible, return <code>-1</code>.</p><p style=\"text-align:start;text-indent:2em;\"><strong>Note:</strong></p><ol><li><code>N</code> will be in the range <code>[1, 100]</code>.</li><li><code>K</code> will be in the range <code>[1, N]</code>.</li><li>The length of <code>times</code> will be in the range <code>[1, 6000]</code>.</li><li>All edges <code>times[i] = (u, v, w)</code> will have <code>1 &lt;= u, v &lt;= N</code> and <code>1 &lt;= w &lt;= 100</code>.</li></ol><pre><code><span style=\"color:#aa0d91\">object</span> Solution {<br/> def networkDelayTime(times: Array[Array[<span style=\"color:#5c2699\">Int</span>]], N: <span style=\"color:#5c2699\">Int</span>, K: <span style=\"color:#5c2699\">Int</span>): <span style=\"color:#5c2699\">Int</span> = {<br/> <span style=\"color:#aa0d91\">import</span> collection.mutable.Map<br/> <span style=\"color:#aa0d91\">var</span> graph: Map[<span style=\"color:#5c2699\">Int</span>, Map[<span style=\"color:#5c2699\">Int</span>, <span style=\"color:#5c2699\">Int</span>]] = Map().withDefaultValue(<span style=\"color:#aa0d91\">null</span>)<br/> <span style=\"color:#aa0d91\">for</span> {<br/> Array(u, v, w) &lt;- times<br/> } {<br/> <span style=\"color:#aa0d91\">if</span>(graph(u) == <span style=\"color:#aa0d91\">null</span>) {<br/> graph(u) = Map(v -&gt; w)<br/> }<br/> <span style=\"color:#aa0d91\">else</span> {<br/> graph(u)(v) = w<br/> }<br/> }<br/> <span style=\"color:#aa0d91\">val</span> seen = Array.fill(N)(<span style=\"color:#aa0d91\">false</span>)<br/> <span style=\"color:#aa0d91\">val</span> dis = Array.fill(N)(<span style=\"color:#5c2699\">Int</span>.MaxValue)<br/> <span style=\"color:#aa0d91\">for</span> {<br/> i &lt;- <span style=\"color:#1c00cf\">0</span> until N<br/> } {<br/> dis(i) = <span style=\"color:#5c2699\">Int</span>.MaxValue<br/> }<br/> seen(K - <span style=\"color:#1c00cf\">1</span>) = <span style=\"color:#aa0d91\">true</span><br/> dis(K - <span style=\"color:#1c00cf\">1</span>) = <span style=\"color:#1c00cf\">0</span><br/> <span style=\"color:#aa0d91\">if</span>(graph(K) != <span style=\"color:#aa0d91\">null</span>) {<br/> <span style=\"color:#aa0d91\">for</span> {<br/> (v, w) &lt;- graph(K).toArray<br/> } {<br/> dis(v - <span style=\"color:#1c00cf\">1</span>) = w<br/> }<br/> }<br/> <span style=\"color:#aa0d91\">else</span> {<br/> <span style=\"color:#aa0d91\">if</span>(N == <span style=\"color:#1c00cf\">1</span>) <span style=\"color:#aa0d91\">return</span> <span style=\"color:#1c00cf\">0</span><br/> <span style=\"color:#aa0d91\">return</span> -<span style=\"color:#1c00cf\">1</span><br/> }<br/> <span style=\"color:#aa0d91\">var</span> <span style=\"color:#aa0d91\">continue</span> = <span style=\"color:#aa0d91\">true</span><br/> <span style=\"color:#aa0d91\">while</span>(<span style=\"color:#aa0d91\">continue</span>) {<br/> <span style=\"color:#aa0d91\">var</span> shortestP = -<span style=\"color:#1c00cf\">1</span><br/> <span style=\"color:#aa0d91\">var</span> shortestDis = <span style=\"color:#5c2699\">Int</span>.MaxValue<br/> <span style=\"color:#aa0d91\">for</span> {<br/> (b, ind) &lt;- seen.zipWithIndex <span style=\"color:#aa0d91\">if</span> !b<br/> } {<br/> <span style=\"color:#aa0d91\">if</span>(dis(ind) &lt; shortestDis) {<br/> shortestP = ind + <span style=\"color:#1c00cf\">1</span><br/> shortestDis = dis(ind)<br/> }<br/> }<br/> <span style=\"color:#aa0d91\">if</span>(shortestP == -<span style=\"color:#1c00cf\">1</span>) {<br/> <span style=\"color:#aa0d91\">continue</span> = <span style=\"color:#aa0d91\">false</span><br/> }<br/> <span style=\"color:#aa0d91\">else</span> {<br/> seen(shortestP - <span style=\"color:#1c00cf\">1</span>) = <span style=\"color:#aa0d91\">true</span><br/> dis(shortestP - <span style=\"color:#1c00cf\">1</span>) = shortestDis<br/> <span style=\"color:#aa0d91\">if</span>(graph(shortestP) != <span style=\"color:#aa0d91\">null</span>) {<br/> <span style=\"color:#aa0d91\">for</span> {<br/> (u, w) &lt;- graph(shortestP).toArray<br/> } {<br/> dis(u - <span style=\"color:#1c00cf\">1</span>) = Math.min(dis(u - <span style=\"color:#1c00cf\">1</span>), shortestDis + w)<br/> }<br/> }<br/> }<br/> }<br/> <span style=\"color:#aa0d91\">val</span> ans = dis.max<br/> <span style=\"color:#aa0d91\">if</span>(ans == <span style=\"color:#5c2699\">Int</span>.MaxValue) <span style=\"color:#aa0d91\">return</span> -<span style=\"color:#1c00cf\">1</span><br/> ans<br/> }<br/>}</code></pre>',\n    _rating: 0,\n    _vector: null\n  },\n  {\n    title: \"LeetCode 600 Non-negative Integers without Consecutive Ones\",\n    date: \"2019-01-05\",\n    tags: \"LeetCode 600 Non-negative Integers without Consecutive Ones 2019 01 05\",\n    extract: \"Fibonacci DP Problem\",\n    data: '<p style=\"text-align:start;text-indent:2em;\">Given a positive integer n, find the number of <strong>non-negative</strong> integers less than or equal to n, whose binary representations do NOT contain <strong>consecutive ones</strong>.</p><p style=\"text-align:start;text-indent:2em;\"><strong>Example 1:</strong><br/></p><pre><code><strong>Input:</strong> 5<br/><strong>Output:</strong> 5<br/><strong>Explanation:</strong> <br/>Here are the non-negative integers &lt;= 5 with their corresponding binary representations:<br/>0 : 0<br/>1 : 1<br/>2 : 10<br/>3 : 11<br/>4 : 100<br/>5 : 101<br/>Among them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule. <br/></code></pre><p style=\"text-align:start;text-indent:2em;\"></p><p style=\"text-align:start;text-indent:2em;\"><strong>Note:</strong> 1 &lt;= n &lt;= 10<sup>9</sup></p><pre><code>object Solution {<br/> val dp: Array[Int] = Array.fill(<span style=\"color:#1c00cf\">32</span>)(<span style=\"color:#1c00cf\">0</span>)<br/> dp(<span style=\"color:#1c00cf\">0</span>) = <span style=\"color:#1c00cf\">1</span><br/> dp(<span style=\"color:#1c00cf\">1</span>) = <span style=\"color:#1c00cf\">2</span><br/> <span style=\"color:#aa0d91\">for</span> {<br/> i &lt;- <span style=\"color:#1c00cf\">2</span> to <span style=\"color:#1c00cf\">31</span><br/> } {<br/> dp(i) = dp(i - <span style=\"color:#1c00cf\">1</span>) + dp(i - <span style=\"color:#1c00cf\">2</span>)<br/> }<br/> def findIntegers(num: Int): Int = {<br/> var ans = <span style=\"color:#1c00cf\">0</span><br/> val arr: Array[Int] = num.toBinaryString.toCharArray.map(_ - <span style=\"color:#c41a16\">&#x27;0&#x27;</span>)<br/> var i = <span style=\"color:#1c00cf\">0</span><br/> val len = arr.length<br/> var preOne = <span style=\"color:#aa0d91\">false</span><br/> var <span style=\"color:#aa0d91\">continue</span> = <span style=\"color:#aa0d91\">true</span><br/> <span style=\"color:#aa0d91\">while</span>(i &lt; len &amp;&amp; <span style=\"color:#aa0d91\">continue</span>) {<br/> <span style=\"color:#aa0d91\">if</span>(arr(i) == <span style=\"color:#1c00cf\">1</span>) {<br/> <span style=\"color:#aa0d91\">if</span>(preOne) {<br/> ans += dp(len - i - <span style=\"color:#1c00cf\">1</span>)<br/> <span style=\"color:#aa0d91\">continue</span> = <span style=\"color:#aa0d91\">false</span><br/> }<br/> <span style=\"color:#aa0d91\">else</span> {<br/> ans += dp(len - i - <span style=\"color:#1c00cf\">1</span>)<br/> preOne = <span style=\"color:#aa0d91\">true</span><br/> }<br/> }<br/> <span style=\"color:#aa0d91\">else</span> {<br/> preOne = <span style=\"color:#aa0d91\">false</span><br/> }<br/> i += <span style=\"color:#1c00cf\">1</span><br/> }<br/> <span style=\"color:#aa0d91\">if</span>(i == len &amp;&amp; <span style=\"color:#aa0d91\">continue</span>) {<br/> ans += <span style=\"color:#1c00cf\">1</span><br/> }<br/> ans<br/> }<br/>}</code></pre>',\n    _rating: 0,\n    _vector: null\n  }\n];\n\nexport default articles;\n","export default function rating(find, articles) {\n  // use find to compute new _rating of articles\n  let a = new Set(find.split(\" \"));\n  let i = 0;\n  for (; i < articles.length; i++) {\n    let b = new Set(articles[i].tags.split(\" \"));\n    articles[i]._rating = (new Set([...a].filter(x => b.has(x)))).size;\n  }\n  return articles.sort((a, b) => {\n    if(a._rating != b._rating) {\n      return b._rating - a._rating;\n    }\n    else {\n      if(a.date < b.date) {\n        return 1;\n      }\n      return -1;\n    }\n  })\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled, {css} from 'styled-components';\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport Search from './Search'\nimport articles from '../data/articles'\nimport rating from './searchEngine/Rating'\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 20px;\n  font-family: \"Times New Roman\";\n  padding-left: 50px;\n  padding-right: 50px;\n  padding-top:10px;\n`;\n\nconst Extract = styled.div`\n  padding-left: 50px;\n  padding-right: 50px;\n  display: inline-block;\n  font-family: \"Times New Roman\";\n`;\n\nconst DateArticle = styled.div`\n  padding-left:50px;\n  display: flow;\n  font-family: \"Times New Roman\";\n  color: rgb(35,208,196);\n`;\n\nconst Data = styled.div`\n  padding-left:50px;\n  padding-right:50px;\n  font-family: \"Times New Roman\";\n  padding-bottom: 50px;\n`;\n\nconst CardFrame = styled.div`\n  flex-grow: 1;\n  min-height: 100%;\n  background: white;\n  border: solid 0.5px gray;\n  margin-left: 10%;\n  margin-right: 10%;\n  ${props => props.toggled && css`\n    flex-basis: 20%;\n    flex-grow: 0;\n    margin-top: 20px;\n    border-radius: 4px;\n    margin-right: 10px;\n    margin-left: 0px;\n    background: white;\n    `};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: ${props => props.toggled? \"row\": \"column\"};\n  padding-left:${props => props.toggled? \"50px\": \"none\"};\n  padding-right:${props => props.toggled? \"50px\": \"none\"};\n  flex-wrap: wrap;\n  padding-bottom: 150px;\n`;\n\nconst BlogCard = ({toggled, title, extract, date, _rating, ...rest}) => {\n  return (\n    <CardFrame toggled={toggled} title={title} {...rest}>\n    <Flipped inverseFlipId={title}>\n      <Title title={title}>{title}</Title>\n    </Flipped>\n      <DateArticle title={title}>{date}</DateArticle>\n      <Extract title={title}>{extract}</Extract>\n    </CardFrame>\n  );\n};\n\nconst ExpandedBlog = ({title, data, date, onClick}) => {\n  return <Flipped flipId={title}>\n  <div onClick={onClick}>\n  <Title>{title}</Title>\n  <DateArticle>{date}</DateArticle>\n  <Data>{data}</Data>\n  </div>\n  </Flipped>\n};\n\nclass Blogs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {inFullScreen:null, toggled:false, searching: \"\", articles: articles.slice().sort((a, b) => {\n      if(b.date > a.date) return 1;\n      if(a.date == b.date) {\n        if(a.title < b.date) {\n          return -1\n        }\n        return 1;\n      }\n      return -1;\n    })};\n  }\n\n  setToggle = () => {\n    this.setState(({toggled}) => ({toggled: !toggled}));\n  }\n\n  setFullScreen = (s) => {\n    s.preventDefault();\n    s.stopPropagation();\n    let i = s.target.title;\n    this.setState(({isFullScreen}) => ({isFullScreen: i}));\n  }\n\n  onCancel = () => {\n    this.setState(({isFullScreen}) => ({isFullScreen: null}));\n  }\n\n  setSearching = (s) => {\n    //we need to modify the rating of our articles\n    this.setState({ searching: s.target.value, articles: rating(s.target.value, this.state.articles.slice()) });\n  }\n\n  RawHTML(children){\n    return <div className='markdown-body' dangerouslySetInnerHTML={{ __html: children}} />;\n  }\n\n  render() {\n    return (\n      <Flipper flipKey={this.state.searching+this.state.toggled+this.state.isFullScreen} spring=\"stiff\">\n      {this.state.isFullScreen?\n      this.state.articles.filter((x) => (x.title == this.state.isFullScreen))\n      .map((obj) => {return <ExpandedBlog key={obj.title} onClick={this.onCancel} title={obj.title} data={this.RawHTML(obj.data)} date={obj.date} />})\n      :<div><Search onChange={this.setSearching} onClick={this.setToggle} />\n      <Wrapper toggled={this.state.toggled} onClick={this.setFullScreen}>\n      {\n        this.state.articles.map((obj) =>\n        <Flipped key={obj.title} flipId={obj.title} stagger={true}>\n          <BlogCard\n            toggled={this.state.toggled}\n            key={obj.title}\n            title={obj.title}\n            extract={obj.extract}\n            date={obj.date}\n            _rating={obj._rating}\n            />\n        </Flipped>)\n      }\n      </Wrapper></div>}\n      </Flipper>\n    );\n  }\n}\n\nexport default Blogs;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport {PhoneIphone} from 'styled-icons/material/PhoneIphone';\nimport {Html5} from 'styled-icons/boxicons-logos/Html5';\nimport {Github} from 'styled-icons/icomoon/Github';\nimport {ReactLogo} from 'styled-icons/boxicons-logos/ReactLogo';\nimport {GoogleDrive} from 'styled-icons/fa-brands/GoogleDrive';\n\nconst Wrapper = styled.div`\n  margin-left: 10px;\n  margin-right: 10px;\n  color: gray;\n  padding-bottom: 10px;\n`;\n\nconst Project = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ProjectCard = styled.div`\n  margin-bottom: 40px;\n  padding-left: 10%;\n  flex: 1 0;\n`;\n\nconst ProjectName = styled.div`\n  position: relative;\n  top: 10px;\n  font-family: \"Times New Roman\";\n  text-align: center;\n  font-size: 20px;\n  margin-bottom: 15px;\n`;\n\nconst Note = styled.div`\n  padding-left: 10%;\n  padding-right: 10%;\n  margin-bottom: 20px;\n`;\n\nconst ProjectDescription = styled.div`\n  padding-right: 10%;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\nconst IconsWrapper = styled.div`\n  padding-right: 14px;\n  display: inline-block;\n  width: 40px;\n  height: auto;\n`;\n\nconst ProjectMyJob = styled.div`\n  padding-right: 10%;\n`;\n\nconst ProjectTechs = styled.ul`\n  padding-right: 10%;\n`;\n\nconst TechPoint = styled.li`\n  float: left;\n  list-style-position: inside;\n  list-style-type: disc;\n  margin-right: 1em;\n`;\n\nconst Demo = styled.a`\n  user-drag: none;\n`;\n\nconst Caption = styled.b`\n  display: block;\n  padding-top: 4px;\n`;\n\nconst Title = styled.h3`\n  color: black;\n  padding-left: 5%;\n`;\n\nconst Delim = styled.div`\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border: solid 0.5px lightgray;\n  width: 90%;\n  box-shadow: 0.2px 0.2px #888888;\n`;\n\nclass Projects extends React.Component {\n\n  render() {\n    return (\n      <div>\n      <Wrapper>\n        <Title>Project</Title>\n        <Project>\n          <ProjectCard>\n            <ProjectName><Demo target=\"_blank\" href=\"https://itunes.apple.com/us/app/tela-health/id1395480873?ls=1&mt=8\"><IconsWrapper><PhoneIphone color=\"rgb(35,208,196)\"/></IconsWrapper></Demo>Tela App -- healthcare moble app</ProjectName>\n            <Delim></Delim>\n            <ProjectDescription>\n            <Caption>Rationale:</Caption>\n            Too little time and resources are spent understanding the patient experience in the real world. We are changing that. Our mission is to unlock insights into the patient experience in order to improve patient quality of life and survival, enhance the way providers engage with their patients, and advance cancer research. The Tela app is a free tool for any patient to use to to track their progress during treatment. Patients own their self-generated health data and can send a PDF report to providers.\n            </ProjectDescription>\n            <ProjectMyJob>\n            <Caption>What I learnt:</Caption>\n            Tx Tracker is a startup using WeWork as their office. Its developer team was quite small at that time. Five people in total including me as their Summer intern in 2018. We all worked remotely and communicated via Skype which is quite challenging for me. I learnt not only how to build app from the scratch, but the ways to play an efficient role in a small developer team as well. Communication and quick prototyping makes app developing agile. After three months endeavor, the first version of Tela App was released on iOS app store. It is a nice app for patients to track their symptoms which in turn gives valuable data to their doctors.<br/>\n            </ProjectMyJob>\n            <Delim></Delim>\n            <Caption>Technologies:</Caption>\n            <ProjectTechs>\n              <TechPoint>React Native</TechPoint>\n              <TechPoint>Elixir OTP Phoenix</TechPoint>\n              <TechPoint>Restful/GraphQL</TechPoint>\n              <TechPoint>PostgresQL</TechPoint>\n              <TechPoint>Google App Engine</TechPoint>\n            </ProjectTechs>\n          </ProjectCard>\n        </Project>\n      </Wrapper>\n      <Wrapper>\n        <Title>Personal Project</Title>\n        <Note>\n          Most of my personal project is just for fun, so I replace rationale part with some background description.\n        </Note>\n          <Project>\n          <ProjectCard>\n            <ProjectName><Demo target=\"_blank\" href=\"https://github.com/Yuandong-Chen/PersonalWebSite\"><IconsWrapper><ReactLogo color=\"aqua\"/></IconsWrapper></Demo>Personal Website</ProjectName>\n            <Delim></Delim>\n            <ProjectDescription>\n            <Caption>Description:</Caption>\n            Having a simple personal website becomes important for me in 2019. Since I like reading technology and theory books, I have to take some note or write some blogs here. It is also a good way for self-presentation instead of a plain resume.\n            </ProjectDescription>\n            <ProjectMyJob>\n            <Caption>Experience:</Caption>\n            It is fun to build personal website from the scratch. Yes, I could use WordPress, Hexo... but they all feel like adopted children. Currently, my personal website has no backend. I will keep working on it and add more functions if needed. I think it is a good starting point.\n            </ProjectMyJob>\n            <Delim></Delim>\n            <Caption>Technologies:</Caption>\n            <ProjectTechs>\n              <TechPoint>ReactJS</TechPoint>\n              <TechPoint>Styled Component</TechPoint>\n              <TechPoint>SVG animation</TechPoint>\n            </ProjectTechs>\n          </ProjectCard>\n          <ProjectCard>\n            <ProjectName><Demo target=\"_blank\" href=\"https://github.com/Yuandong-Chen/GraphicsLab\"><IconsWrapper><Html5 color=\"red\"/></IconsWrapper></Demo>Software 3D Renderer</ProjectName>\n            <Delim></Delim>\n            <ProjectDescription>\n            <Caption>Description:</Caption>\n            Building software renderer is fundamental in Computer Graphics.\nThis project is aimed for rendering 3d object with HTML5 canvas 2d API and the only allowed rendering API is setting pixels.\nIt is an ongoing project based on CSCI 6554 course lab of George Washington University.\n            </ProjectDescription>\n            <ProjectMyJob>\n            <Caption>What I learnt:</Caption>\n            1. Perspective view of the object displayed on the viewport with back faces removed. <br/>\n            2. To be continued. (Since it is an onging project)\n            </ProjectMyJob>\n            <Delim></Delim>\n            <Caption>Technologies:</Caption>\n            <ProjectTechs>\n              <TechPoint>HTML5 Canvas</TechPoint>\n              <TechPoint>JavaScript</TechPoint>\n              <TechPoint>CSS3</TechPoint>\n            </ProjectTechs>\n          </ProjectCard>\n          <ProjectCard>\n            <ProjectName><Demo target=\"_blank\" href=\"https://github.com/Yuandong-Chen/js2cpp\"><IconsWrapper><Github color=\"black\"/></IconsWrapper></Demo>Js2Cpp Transpiler</ProjectName>\n            <Delim></Delim>\n            <ProjectDescription>\n            <Caption>Description:</Caption>\n            Building a basic JavaScript to C++ transpiler is good practice for compiler course. I first built a YACC-like LR parser, added production rules for JavaScript and finally translated parse tree directly to C++ program. It is an old way to implement DSL. I prefer to use parser combinator library for real world DSL task.\n            </ProjectDescription>\n            <ProjectMyJob>\n            <Caption>What I learnt:</Caption>\n            1. A to B transpiler is always easy if B is a dynamic language or A is strong type static language.<br/>\n            2. Frontend knowledge of compiler.\n            </ProjectMyJob>\n            <Delim></Delim>\n            <Caption>Technologies:</Caption>\n            <ProjectTechs>\n              <TechPoint>C++</TechPoint>\n              <TechPoint>JavaScript</TechPoint>\n            </ProjectTechs>\n          </ProjectCard>\n          <ProjectCard>\n            <ProjectName><Demo target=\"_blank\" href=\"https://github.com/Yuandong-Chen/coroutine\"><IconsWrapper><Github color=\"black\"/></IconsWrapper></Demo>Coroutine Library</ProjectName>\n            <Delim></Delim>\n            <ProjectDescription>\n            <Caption>Description:</Caption>\n            After read the source code of Linux 0.11 and Minix2, I felt an impluse to write something. The task scheduler in Minix2 is so smart that I use the same idea to build a coroutine library. It supports billions of coroutines with stack-sharing technology.\n            </ProjectDescription>\n            <ProjectMyJob>\n            <Caption>What I learnt:</Caption>\n            1. Operating system.<br/>\n            2. Computer Architecture.\n            </ProjectMyJob>\n            <Delim></Delim>\n            <Caption>Technologies:</Caption>\n            <ProjectTechs>\n              <TechPoint>X86/64 Assembly Language</TechPoint>\n              <TechPoint>C</TechPoint>\n              <TechPoint>Linux</TechPoint>\n            </ProjectTechs>\n          </ProjectCard>\n        </Project>\n      </Wrapper>\n      <Wrapper>\n        <Title>Course Paper</Title>\n        <Project>\n          <ProjectCard>\n            <ProjectName><Demo target=\"_blank\" href=\"https://docs.google.com/document/d/1ANzJtFO9gpG8hDPrHBL6CMONgm8OGE4qgcFonWb13_o/edit?usp=sharing\"><IconsWrapper><GoogleDrive color=\"khaki\"/></IconsWrapper></Demo>Question Answering System for Natural Language Processing Course</ProjectName>\n            <Delim></Delim>\n            <ProjectDescription>\n            <Caption>Background:</Caption>\n            Reading Comprehension is one of the first steps to achieve real artificial intelligence in almost every setting. Stanford Question Answering Dataset (SQuAD) is a reading comprehension dataset, consisting of questions posed by crowdworkers on a set of Wikipedia articles, where the answer to every question is a segment of text, or span, from the corresponding reading passage, or the question might be unanswerable.\nWith the release of Stanford QA dataset (SQuAD), there has been numerous teams trying to improve machine RC. Yet the state-of-art models still trails human performance by huge margin. The engineers of SQuAD build a strong logistic regression model, which achieves an F1 score of 51.0%, a significant improvement over a simple baseline (20%). However, human performance (86.8%) is much higher, indicating that the dataset presents a good challenge problem for future research.\nThe idea of our project is to build ​a new model​ for the Stanford QA dataset (SQuAD) and has the model officially evaluated. Our goal is not to beat the state-of-art models, but rather to gain a deep understanding of some of those models and potential play around with a few tweaks.We have analyzed the dataset to understand the types of reasoning required to answer the questions, leaning heavily on dependency and constituency trees and built ​a new model​ for the Stanford QA dataset (SQuAD).\n            </ProjectDescription>\n            <ProjectMyJob>\n            <Caption>What we did:</Caption>\n            Test and compire two model:<br/>\n            1. Naive Bayes Classifier, Logistic Regression Classifier<br/>\n            2. BiDirectional Attention Flow, Deep Contextualized Word Embedding\n            </ProjectMyJob>\n            <Delim></Delim>\n            <Caption>Technologies:</Caption>\n            <ProjectTechs>\n              <TechPoint>Python</TechPoint>\n              <TechPoint>Scala</TechPoint>\n              <TechPoint>PyTorch</TechPoint>\n            </ProjectTechs>\n          </ProjectCard>\n        </Project>\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport {ProjectName, Wrapper, Title, Project, Caption, Delim, ProjectMyJob, ProjectDescription, IconsWrapper, Demo, ProjectTechs, TechPoint, ProjectCard};\nexport default Projects;\n","import React from 'react'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\nimport 'braft-extensions/dist/table.css'\nimport 'braft-extensions/dist/code-highlighter.css'\nimport 'braft-extensions/dist/emoticon.css'\nimport Emoticon, { defaultEmoticons } from 'braft-extensions/dist/emoticon'\nimport Markdown from 'braft-extensions/dist/markdown'\nimport Table from 'braft-extensions/dist/table'\nimport CodeHighlighter from 'braft-extensions/dist/code-highlighter'\n\nconst emoticons = defaultEmoticons.map(item => require(`braft-extensions/dist/assets/${item}`))\nconst options = {\n  defaultColumns: 3, // 默认列数\n  defaultRows: 3, // 默认行数\n  syntaxs: [\n    {\n      name: 'JavaScript',\n      syntax: 'javascript'\n    }, {\n      name: 'HTML',\n      syntax: 'html'\n    }, {\n      name: 'CSS',\n      syntax: 'css'\n    }, {\n      name: 'Java',\n      syntax: 'java',\n    }, {\n      name: 'PHP',\n      syntax: 'php'\n    }\n  ],\n  emoticons: emoticons, // 指定可用表情图片列表，默认为空\n  closeOnBlur: false, // 指定是否在点击表情选择器之外的地方时关闭表情选择器，默认false\n  closeOnSelect: false, // 指定是否在选择表情后关闭表情选择器，默认false\n  includeEditors: ['editor-id-1'], // 指定该模块对哪些BraftEditor生效，不传此属性则对所有BraftEditor有效\n}\n\nBraftEditor.use(Table(options))\nBraftEditor.use(Markdown(options))\nBraftEditor.use(CodeHighlighter(options))\nBraftEditor.use(Emoticon(options))\n\nexport default class Editor extends React.Component {\n\n  state = {\n      editorState: null\n  }\n\n  async componentDidMount () {\n    // 假设此处从服务端获取html格式的编辑器内容\n    const htmlContent = \"\";//await fetchEditorContent()\n    // 使用BraftEditor.createEditorState将html字符串转换为编辑器需要的editorState数据\n    this.setState({\n      editorState: BraftEditor.createEditorState(htmlContent, { editorId: 'editor-1' })\n    });\n  }\n\n  submitContent = async () => {\n    // 在编辑器获得焦点时按下ctrl+s会执行此方法\n    // 编辑器内容提交到服务端之前，可直接调用editorState.toHTML()来获取HTML格式的内容\n    const rawContent = this.state.editorState;\n    const htmlContent = rawContent.toHTML();\n    const result = await this.props.onSave(htmlContent, rawContent);\n  }\n\n  handleEditorChange = (editorState) => {\n    this.setState({ editorState });\n  }\n\n  render () {\n    const { editorState } = this.state;\n    return (\n      <div className=\"my-component\">\n        <BraftEditor\n          value={editorState}\n          onChange={this.handleEditorChange}\n          onSave={this.submitContent}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport Editor from './Editor';\n\nconst Wrapper = styled.div`\n  border-bottom: solid 1px black;\n`;\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {html: \"\", raw: \"\"};\n  }\n\n  saveChange = (s, r) => {\n    this.setState({html: s, raw: r});\n  }\n\n  render() {\n    return (\n      <div>\n      <Wrapper>{this.state.html}</Wrapper>\n      <Editor onSave={this.saveChange}/>\n      </div>\n    );\n  }\n}\n\nexport default Edit;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport {Github} from 'styled-icons/icomoon/Github';\nimport {Email} from 'styled-icons/material/Email';\nimport {StackOverflow} from 'styled-icons/boxicons-logos/StackOverflow';\nimport leetcode from '../data/LeetCode_logo.png';\nimport resume from '../data/resume2.pdf'\nimport {ProjectName, Wrapper, Title, Project, Caption, Delim, ProjectMyJob, ProjectDescription, IconsWrapper, Demo, ProjectTechs, TechPoint, ProjectCard} from './Projects';\n\nconst LeetCode = styled.img`\n  display: inline-block;\n  position: relative\n  top: -2px;\n  left: -5px;\n  width: 50px;\n  user-drag:none;\n`;\n\nconst MTechPoint = styled(TechPoint)`\n  list-style-type: none;\n`;\n\nclass AboutMe extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title><Demo target=\"_blank\" href={resume}>Download Resume (Open for hiring)</Demo></Title>\n        <Project>\n          <ProjectCard>\n            <ProjectName></ProjectName>\n            <Delim></Delim>\n            <ProjectDescription>\n            <Caption>Education:</Caption>\n            The George Washington University, School of Engineering and Applied Science Washington, DC<br/>\n            Master of Computer Science GPA 3.7 Aug 2017 - present<br/><br/>\n            University of California, San Diego, Jacobs School of Engineering<br/>\n            Master of Science and Engineering GPA 3.3 Dec 2015<br/><br/>\n            Harbin Institute of Technology, Engineering School<br/>\n            Bachelor of Engineering, Material Physics GPA 3.5 July 2014<br/>\n            </ProjectDescription>\n            <ProjectMyJob>\n            <Caption>I'm a book list maniac, I finished reading the following books from 2016 to 2018 (I have to remind you that I decide to change my specialization in 2016):</Caption>\n            <ol>\n              <li>跟我一起写 Makefile - 陈皓</li>\n              <li>Classic Shell Scriping - Arnold Robbins</li>\n              <li>Linux C/C++ - 位元文化</li>\n              <li>The C Programming Language - Brian W. Kernichan</li>\n              <li>C Interfaces and Implimentations - David R. Hanson</li>\n              <li>C++ Prime - Stanley B. Lippman</li>\n              <li>C++ Concurrency in Action - Antony Williams</li>\n              <li>鸟哥的Linux私房菜基础版</li>\n              <li>Understanding Unix/Linux Programming - Molay,B</li>\n              <li>Advanced Programming in the Unix Environment - W. Richard Stevens</li>\n              <li>Computer Systems A Programmer's Perspective - Randal E. Bryant</li>\n              <li>Computer Networking A Top-Down Approach - James F. Kurose</li>\n              <li>TCP/IP Illustrated Vol1 - W. Richard Stevens</li>\n              <li>TCP/IP Illustrated Vol2 - W. Richard Stevens</li>\n              <li>Assembly Language - 王爽</li>\n              <li>Profession Assembly Language - Richard Blum</li>\n              <li>X86汇编语言 从实模式到保护模式 - 李忠</li>\n              <li>Orange'S 一个操作系统的实现- 赵炯</li>\n              <li>Linux内核完全剖析 - 赵炯</li>\n              <li>JavaScript The Good Part - Douglas Crockford</li>\n              <li>FullStack React The Complete Guide to ReactJS and Friends - Nate Murray</li>\n              <li>Programming Erlang - Joe Armstrong</li>\n              <li>Learn  You Some Erlang For Great Good - Fred Hebert</li>\n              <li>Mnesia User Manual</li>\n              <li>Erlang Programming - Francesco Cesarini</li>\n              <li>Erlang and OTP in Action - Martin Logan</li>\n              <li>Designing for Scalability Erlang/OTP - Francesco Cesarini</li>\n              <li>Programming Elixir - Dave Thomas</li>\n              <li>Metaprogramming Elixir - Chris MacCord</li>\n              <li>The Little Elixir and OTP Guidbook - Benjamin Tan Wei Hao</li>\n              <li>Elixir in Action - Sasa Juric</li>\n              <li>Programming Phoenix - Chris McCord</li>\n              <li>What's new in Ecto 2.0 - plataformatec</li>\n              <li>Functional Web Development with Elixir, OTP and Phoenix - Lance Halvorsen</li>\n              <li>Craft GraphQL APIs in Elixir with Absinthe - Bruce Williams</li>\n              <li>Programming in Scala - Martin Odersky</li>\n              <li>Functional Programming in Scala - Paul Chiusano</li>\n              <li>Scala with CAT - Noel Welsh</li>\n              <li>The Type Astronaut's Guide to Shapeless - Dave Gurnell</li>\n              <li>Fluent Python - Luciano Ramalho</li>\n              <li>Practical Vim - Drew Neil</li>\n              <li>Modern Vim - Drew Neil</li>\n              <li>Core Java Vol1 - Cay S. Horstmann</li>\n              <li>Designing Data Intensive Applications - Martin Kleppmann</li>\n              <li>Streamming Systems - Tyler Akidau</li>\n              <li>Analysis and design of algorithms - Amerinder Arora (GWU Professor teaching our algorithm course)</li>\n              <li>An Introduction to Statistical Learning with Applications in R - Gareth James</li>\n              <li>Speech and Language Processing An Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition - James H. Martin</li>\n            </ol>\n            Next Book in my plan:\n            Introduction to Distributed Algorithms - Gerard Tel\n            </ProjectMyJob>\n            <Delim></Delim>\n            <Caption>Contact Me:</Caption>\n            <ProjectTechs>\n              <MTechPoint><IconsWrapper><Demo target=\"_blank\" href=\"https://github.com/Yuandong-Chen/\"><Github color=\"black\"/></Demo></IconsWrapper></MTechPoint>\n              <MTechPoint><IconsWrapper><Demo target=\"_blank\" href=\"https://leetcode.com/yuandong-chen/\"><LeetCode src={leetcode} color=\"black\"/></Demo></IconsWrapper></MTechPoint>\n              <MTechPoint><IconsWrapper><Demo target=\"_blank\" href=\"mailto:zyz2118acz@gwmail.gwu.edu\"><Email color=\"darkred\"/></Demo></IconsWrapper></MTechPoint>\n              <MTechPoint><IconsWrapper><Demo target=\"_blank\" href=\"https://stackoverflow.com/users/5304662/chenyuandong?tab=profile\"><StackOverflow color=\"orange\"/></Demo></IconsWrapper></MTechPoint>\n            </ProjectTechs>\n          </ProjectCard>\n        </Project>\n      </Wrapper>\n    );\n  }\n}\n\nexport default AboutMe;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport styled from 'styled-components';\nimport Blogs from './Blogs';\nimport Projects from './Projects';\nimport Edit from './Edit';\nimport AboutMe from './AboutMe';\n\nconst Menu = styled.div`\n  display: inline-block;\n  font-family: 'Monoton', cursive;\n  font-size: 24px;\n  font-weight: bold;\n  margin-left: 10px;\n  color: #444444;\n  text-decoration: none;\n  &:hover {\n    color: lightgray;\n    font-weight: light;\n    cursor: pointer;\n  }\n  user-drag: none;\n`.withComponent(Link);\n\nconst MenuContainer = styled.div`\n  padding-bottom: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst Panel = styled.div`\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-top: solid 0.5px black;\n`;\n\nconst Tabs = ({tabs}) => {\n  return (\n    <div>\n      <Router>\n          <div>\n            <MenuContainer>\n              {tabs.map((name) => <Menu key={name} to={'/' + name}>{name}</Menu>)}\n            </MenuContainer>\n            <Panel>\n              <Switch>\n                <Route path='/Blogs' component={Blogs} />\n                <Route path='/Projects' component={Projects} />\n                <Route path='/About me' component={AboutMe} />\n                <Route path='/Edit' component={Edit} />\n                <Route path='/' component={Blogs} />\n              </Switch>\n            </Panel>\n          </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default Tabs;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled, { keyframes } from 'styled-components';\nimport Tabs from './Tabs'\n\nlet tabConfigs = [\n  \"Blogs\",\n  \"Projects\",\n  \"About me\"\n];\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`\n\nconst AnimeWrapper = styled.div`\n  animation: 1s ${fadeIn} ease-out;\n  animation-fill-mode: forwards;\n  background: none;\n`;\n\nconst Home = ({tabsConfigs, articles}) => {\n  return (\n    <AnimeWrapper>\n      <Tabs tabs={tabConfigs} articles={articles}/>\n    </AnimeWrapper>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Loading from './components/Loading'\nimport Home from './components/Home'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: true };\n  }\n\n  componentDidMount() {\n    setTimeout(() => { this.setState({isLoading: false}); }, 1000);\n  }\n\n  render() {\n    return(\n        this.state.isLoading? <Loading/>:<Home/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'gitment/style/default.css'\nimport Gitment from 'gitment'\n\nvar gitment = new Gitment({\n  id:window.location.pathname,\n  owner: 'Yuandong-Chen',\n  repo: 'DemoForPersonalWebSite',\n  oauth: {\n    client_id: '31964faed62d30bab566',\n    client_secret: '4677647bfe33efba267dbce2ec2d091d27bf6d58',\n  },\n});\ngitment.render('container');\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App/></Router>, document.getElementById('root'));\n"],"sourceRoot":""}